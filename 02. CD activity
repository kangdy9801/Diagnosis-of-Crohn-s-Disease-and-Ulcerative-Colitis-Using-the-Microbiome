library('phyloseq')
library("ape")
library("Biostrings")
library("ggplot2")
library("ggtree")
library('tidytree')
library('ggpubr')

physeq
data_phylo_filt
data_phylo_filt_rarefy

#Group
physeq_CD <- phyloseq::subset_samples(
  physeq = data_phylo_filt_rarefy,
  Group %in% c("HC","CD"))
sample_data(patient)$Group <- factor(sample_data(patient)$Group, levels=c("HC","CD"))

#Class
patient <- phyloseq::subset_samples(
  physeq = physeq_CD,
  Class %in% c("HC","Mild","Moderate"))
sample_data(patient)$Class <- factor(sample_data(patient)$Class, levels=c("HC","Mild","Moderate"))


##02. alpha diversity
library(microbiomeutilities)
library(ggpubr)

# change color of line 
mycols <- c("springgreen3","brown3","steelblue")

chao1_alpha_plot <- plot_diversity_stats(patient, group = "Class", 
                                         index = "chao1",
                                         label.format="p.format",
                                         group.colors = mycols,
                                         stats = TRUE)+
  scale_x_discrete("Class", labels = c("HC" = "HC \n(n = 50)","Mild" = "Mild \n(n = 100)","Moderate" = "Moderate \n(n = 55)","Severe" = "Severe \n(n = 18)"))+
  theme(legend.position="none",
        axis.text.x=element_text(angle=0,hjust=0.5,vjust=0.5,size=15),
        axis.text.y = element_text(size=18),
        axis.title.y = element_text(size=20))+scale_y_continuous(name = 'Chao1')

##03. beta diversity
pseq.rda <- ordinate(physeq = patient, method = "PCoA",distance ="bray", cca = "Class")
ord_RDA <- plot_ordination(physeq = patient, ordination = pseq.rda, color = "Class")
ord_RDA <- ord_RDA + geom_point(size = 7) + 
  scale_color_manual(values=mycols) + stat_ellipse() + theme_classic2() +
  theme(axis.text.y = element_text(size=30),
        axis.text.x = element_text(size = 30),
        legend.title = element_text(size = 25),
        legend.text = element_text(size = 25),
        axis.title.y = element_text(size=30), 
        axis.title.x = element_text(size = 30))
ord_RDA

library("vegan")
totumat <- t(otu_table(patient))
sample_meta <- sample_data(patient)
sample_meta <- data.frame(sample_meta)

adonis2(totumat~Class, data= sample_meta, permutations=9999, method="bray")

##04. relative abundance
#Group
physeq_CD <- phyloseq::subset_samples(
  physeq = data_phylo_filt,
  Group %in% c("HC","CD"))
sample_data(patient)$Group <- factor(sample_data(patient)$Group, levels=c("HC","CD"))

#Class
patient <- phyloseq::subset_samples(
  physeq = physeq_CD,
  Class %in% c("HC","Mild","Moderate"))
sample_data(patient)$Class <- factor(sample_data(patient)$Class, levels=c("HC","Mild","Moderate"))

#01. data
library('microeco')
sample_meta <- sample_data(patient)
otu <- otu_table(patient)
tax <- tax_table(patient)

sample_meta <- data.frame(sample_meta)

dataset <- microtable$new(sample_table = sample_meta, otu_table = otu, tax_table = tax)
dataset

#02.phylum, genus, species level만 가져오기.
# The groupmean parameter can be used to obtain the group-mean barplot.
t1 <- trans_abund$new(dataset = dataset, taxrank = "Phylum", ntaxa = 10, groupmean = "Class")
t2 <- trans_abund$new(dataset = dataset, taxrank = "Genus", ntaxa = 10, groupmean = "Class")
t3 <- trans_abund$new(dataset = dataset, taxrank = "Species", ntaxa = 10, groupmean = "Class")

#03. plot
p1 <- t1$plot_bar(others_color = "grey15", legend_text_italic = FALSE)
p2 <- p1 + theme_classic() +
  scale_x_discrete("Class", labels = c("HC" = "HC \n(n = 50)","Mild" = "Mild \n(n = 49)","Moderate" = "Moderate \n(n = 19)"))+
  theme(axis.text.y = element_text(size=25),
        axis.text.x = element_text(angle=0,hjust=0.5,vjust=0.5,size=25),
        legend.title = element_text(size = 25),
        legend.text = element_text(size = 15),
        axis.title.y = element_text(size=30), 
        axis.title.x = element_text(size = 20))

g1 <- t2$plot_bar(others_color = "grey15", legend_text_italic = FALSE)
g2 <- g1 + theme_classic() +
  scale_x_discrete("Class", labels = c("HC" = "HC \n(n = 50)","Mild" = "Mild \n(n = 49)","Moderate" = "Moderate \n(n = 19)"))+
  theme(axis.text.y = element_text(size=25),
        axis.text.x = element_text(angle=0,hjust=0.5,vjust=0.5,size=25),
        legend.title = element_text(size = 25),
        legend.text = element_text(size = 15),
        axis.title.y = element_text(size=30), 
        axis.title.x = element_text(size = 20))

s1 <- t3$plot_bar(others_color = "grey15", legend_text_italic = FALSE)
s2 <- s1 + theme_classic() +
  scale_x_discrete("Class", labels = c("HC" = "HC \n(n = 50)","Mild" = "Mild \n(n = 49)","Moderate" = "Moderate \n(n = 19)"))+
  theme(axis.text.y = element_text(size=25),
        axis.text.x = element_text(angle=0,hjust=0.5,vjust=0.5,size=25),
        legend.title = element_text(size = 25),
        legend.text = element_text(size = 15),
        axis.title.y = element_text(size=30), 
        axis.title.x = element_text(size = 20))

##05. differential abudnacne
#  Linear (Lin) Model for Differential Abundance (DA) Analysis
library("MicrobiomeStat")

#00. data
#Group
physeq_CD <- phyloseq::subset_samples(
  physeq = data_phylo_filt,
  Group %in% c("HC","CD"))
sample_data(patient)$Group <- factor(sample_data(patient)$Group, levels=c("HC","CD"))

#02. linda
linda.obj <- linda(phyloseq.obj = physeq_CD,
                   feature.dat.type = "count", 
                   p.adj.method = "fdr",#P 보정
                   alpha = 0.05,
                   is.winsor = TRUE, # 
                   formula = '~Group', #
                   zero.handling = "pseudo-count", 
                   pseudo.cnt = 1) # pseudo coun 
res <- linda.obj$output
res$GroupCD

#03.data.frame
linda_res_df <- data.frame(
  Species = row.names(res$GroupCD),
  baseMean = unlist(res$GroupCD$baseMean),#2의 절편 계수의 거듭제곱(100만 단위로 정규화됨)
  logFC = unlist(res$GroupCD$log2FoldChange),
  lfcSE = unlist(res$GroupCD$lfcSE), # standard errors
  stat = unlist(res$GroupCD$stat),#log2FoldChange / lfcSE
  pvalue = unlist(res$GroupCD$pvalue),
  padj = unlist(res$GroupCD$padj),
  reject = unlist(res$GroupCD$reject),# padj <= alpha
  df = unlist(res$GroupCD$df)) #degrees of freedom
linda_res_df[1:5, 1:9]

#04. plot
library(EnhancedVolcano)
EnhancedVolcano(linda_res_df,
                lab = linda_res_df$Species,
                x = 'logFC',
                y = 'padj',
                subtitle = bquote(italic('FDR <= 0.05, absolute log2FC >= 1')),
                pCutoff= 0.05,
                FCcutoff = 1,
                pointSize = 4,
                labSize=5,
                selectLab=c(""),
                xlab = bquote(~Log[2]~ 'fold change'),
                labCol = 'black',
                labFace = 'bold',
                ylim = c(0, max(-log10(linda_res_df[["pvalue"]]), na.rm = TRUE) + 1),
                boxedLabels = TRUE,
                colAlpha = 5/5,
                legendPosition = 'none',
                legendLabSize = 14,
                legendIconSize = 4.0,
                drawConnectors = TRUE,
                widthConnectors = 1.0,
                colConnectors = 'black')

#Class
patient <- phyloseq::subset_samples(
  physeq = physeq_CD,
  Class %in% c("Mild","Moderate"))
sample_data(patient)$Class <- factor(sample_data(patient)$Class, levels=c("Mild","Moderate"))


#05. linda
linda.obj_CD <- linda(phyloseq.obj = patient,
                   feature.dat.type = "count", 
                   p.adj.method = "fdr",
                   alpha = 0.01,
                   is.winsor = TRUE, 
                   formula = '~Class', 
                   zero.handling = "pseudo-count", 
                   pseudo.cnt = 1) # pseudo coun 
res <- linda.obj_CD$output
res$ClassModerate

#06.data.frame
linda_res_df <- data.frame(
  Species = row.names(res$ClassModerate),
  baseMean = unlist(res$ClassModerate$baseMean),
  logFC = unlist(res$ClassModerate$log2FoldChange),
  lfcSE = unlist(res$ClassModerate$lfcSE), # standard errors
  stat = unlist(res$ClassModerate$stat),#log2FoldChange / lfcSE
  pvalue = unlist(res$ClassModerate$pvalue),
  padj = unlist(res$ClassModerate$padj),
  reject = unlist(res$ClassModerate$reject),# padj <= alpha
  df = unlist(res$ClassModerate$df)) #degrees of freedom
linda_res_df[1:5, 1:9]

#07. plot
library(EnhancedVolcano)
EnhancedVolcano(linda_res_df,
                lab = linda_res_df$Species,
                x = 'logFC',
                y = 'pvalue',
                subtitle = bquote(italic('p-value <= 0.001, absolute log2FC >= 1')),
                pCutoff= 0.001,
                FCcutoff = 1,
                pointSize = 4,
                labSize=5,
                selectLab=c("328814","182210","1743168"),
                xlab = bquote(~Log[2]~ 'fold change'),
                labCol = 'black',
                labFace = 'bold',
                ylim = c(0, max(-log10(linda_res_df[["pvalue"]]), na.rm = TRUE) + 1),
                boxedLabels = TRUE,
                colAlpha = 5/5,
                legendPosition = 'none',
                legendLabSize = 14,
                legendIconSize = 4.0,
                drawConnectors = TRUE,
                widthConnectors = 1.0,
                colConnectors = 'black')
